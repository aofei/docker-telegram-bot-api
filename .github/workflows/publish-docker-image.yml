name: Publish Docker image
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
jobs:
  prepare-docker-image-build-metadata:
    runs-on: ubuntu-latest
    outputs:
      docker-image-tag: ${{steps.prepare-docker-image-build-metadata.outputs.docker-image-tag}}
      docker-image-build-arg-telegram-bot-api-git-ref: ${{steps.prepare-docker-image-build-metadata.outputs.docker-image-build-arg-telegram-bot-api-git-ref}}
    steps:
      - name: Check out Telegram Bot API code
        uses: actions/checkout@v3
        with:
          repository: tdlib/telegram-bot-api
          path: telegram-bot-api
      - name: Prepare Docker image build metadata
        id: prepare-docker-image-build-metadata
        run: |
          DOCKER_IMAGE_TAG=$(grep "parameters->version_ = " telegram-bot-api/telegram-bot-api/telegram-bot-api.cpp | head -1 | grep -Eo "[0-9]+(\.[0-9])+")
          DOCKER_IMAGE_BUILD_ARG_TELEGRAM_BOT_API_GIT_REF=$(cd telegram-bot-api && git rev-parse HEAD | head -1 && cd ..)
          echo "::set-output name=docker-image-tag::$DOCKER_IMAGE_TAG"
          echo "::set-output name=docker-image-build-arg-telegram-bot-api-git-ref::$DOCKER_IMAGE_BUILD_ARG_TELEGRAM_BOT_API_GIT_REF"
  build-multiarch-docker-images:
    runs-on: ubuntu-latest
    needs: prepare-docker-image-build-metadata
    strategy:
      matrix:
        platform:
          - "linux/386"
          - "linux/amd64"
          - "linux/arm/v6"
          - "linux/arm/v7"
          - "linux/arm64"
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{matrix.platform}}
          build-args: TELEGRAM_BOT_API_GIT_REF=${{needs.prepare-docker-image-build-metadata.outputs.docker-image-build-arg-telegram-bot-api-git-ref}}
          cache-to: type=local,dest=docker-image-build-caches/${{matrix.platform}},mode=max
      - name: Upload Docker image build caches
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-build-caches
          path: docker-image-build-caches
  publish-docker-image:
    runs-on: ubuntu-latest
    needs: [prepare-docker-image-build-metadata, build-multiarch-docker-images]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download Docker image build caches
        uses: actions/download-artifact@v3
        with:
          name: docker-image-build-caches
          path: docker-image-build-caches
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{github.token}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: |
            linux/386
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
          build-args: TELEGRAM_BOT_API_GIT_REF=${{needs.prepare-docker-image-build-metadata.outputs.docker-image-build-arg-telegram-bot-api-git-ref}}
          cache-from: |
            type=local,src=docker-image-build-caches/linux/386
            type=local,src=docker-image-build-caches/linux/amd64
            type=local,src=docker-image-build-caches/linux/arm/v6
            type=local,src=docker-image-build-caches/linux/arm/v7
            type=local,src=docker-image-build-caches/linux/arm64
          push: ${{github.event_name != 'pull_request'}}
          tags: |
            ${{secrets.DOCKER_USERNAME}}/telegram-bot-api:${{needs.prepare-docker-image-build-metadata.outputs.docker-image-tag}}
            ${{secrets.DOCKER_USERNAME}}/telegram-bot-api:latest
            ghcr.io/${{github.repository_owner}}/telegram-bot-api:${{needs.prepare-docker-image-build-metadata.outputs.docker-image-tag}}
            ghcr.io/${{github.repository_owner}}/telegram-bot-api:latest
